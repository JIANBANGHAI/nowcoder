<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">
    <sql id="select">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="insert">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <select id="getListAll" resultType="Message">
        select
        <include refid="select"></include>
        from message
        where id in(
            SELECT
            max(id)
            FROM
            message
            where status!=2
            and from_id!=1
            and (from_id=#{userId} or to_id=#{userId})
            GROUP BY conversation_id
        )
        order by id desc limit #{offset},#{limit}
    </select>
    <select id="getListCount" resultType="int">
        select count(m.maxid)
        from
        (SELECT
        max(id) as maxid
        FROM
        message
        where status!=2
        and from_id!=1
        and (from_id=#{userId} or to_id=#{userId})
        GROUP BY conversation_id) as m
    </select>

    <select id="getLetters" resultType="Message">
        SELECT
        <include refid="select"></include>
        FROM
        message
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
        order by id desc
        limit #{offset},#{limit}
    </select>
    <select id="selectLettersCount" resultType="int">
        SELECT
        count(id)
        FROM
        message
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
    </select>
    <select id="selectLettersUnReadCount" resultType="int">
        select
        count(id)
        from message
        where status=0
        and from_id!=1
        and to_id=#{userId}
        <if test="conversationId!=null">
            and conversation_id=#{conversationId}
        </if>
    </select>
    <insert id="insertMessage" keyProperty="id" parameterType="Message">
            insert into message(<include refid="insert"></include>)
            values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <select id="findMessageByNotice" resultType="Message">
        select
        <include refid="select"></include>
        from
        message
        where
        id  in
        (select max(id) from message where status!=2 and from_id=1 and conversation_id=#{topic} and to_id=#{userId}
        )
    </select>
    <select id="findMessageByNoticeCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>
    <select id="findMessageByNoticeUnRead" resultType="int">
        select count(id) from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="findAllDetailMessage" resultType="Message">
        select
        <include refid="select"></include>
        from message
        where status!=2
        and from_id=1
        and conversation_id=#{topic}
        and to_id=#{userId}
        order by create_time desc
        limit #{start},#{end}
    </select>
</mapper>